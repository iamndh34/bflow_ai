# """
# Django settings for mis_ai project.
#
# Generated by 'django-admin startproject' using Django 4.2.8.
#
# For more information on this file, see
# https://docs.djangoproject.com/en/4.2/topics/settings/
#
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/4.2/ref/settings/
# """
#
# from pathlib import Path
# import os
#
# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
#
#
# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/
#
# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-)tjgidv1zo^-fq^17_&!*h42n)^7@mee*5_v004$#h@)yq4i=l'
#
# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
#
# ALLOWED_HOSTS = []
#
#
# # Application definition
#
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'bootstrap5',
#     'jquery',
#     'apps.bflow_ai'
# ]
#
# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]
#
# ROOT_URLCONF = 'mis_ai.urls'
#
# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [os.path.join(BASE_DIR, 'templates')],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]
#
# WSGI_APPLICATION = 'mis_ai.wsgi.application'
#
#
# # Database
# # https://docs.djangoproject.com/en/4.2/ref/settings/#databases
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
#
#
# # Password validation
# # https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
#
# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]
#
#
# # Internationalization
# # https://docs.djangoproject.com/en/4.2/topics/i18n/
#
# TIME_ZONE = 'UTC'
#
# USE_I18N = True
#
# USE_TZ = True
#
#
# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/4.2/howto/static-files/
#
# STATIC_URL = 'static/'
#
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
#
# STATICFILES_DIRS = (os.path.join(BASE_DIR, 'statics'),)
#
# # Default primary key field type
# # https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
#
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
#
# try:
#     from .local_settings import *
# except ImportError:
#     pass
#
# # Key return resp after call API
# API_KEY_AUTH = 'Authorization'
# API_PREFIX_TOKEN = 'Bearer'
# API_KEY_AUTH_REFRESH = 'Authorization_Refresh'
# API_KEY_RESPONSE_DATA = 'result'
# API_KEY_RESPONSE_ERRORS = 'errors'
# API_KEY_RESPONSE_STATUS = 'status'
# API_KEY_RESPONSE_PAGE_SIZE = 'page_size'
# API_KEY_RESPONSE_PAGE_COUNT = 'count'
# API_KEY_RESPONSE_PAGE_NEXT = 'next'
# API_KEY_RESPONSE_PAGE_PREVIOUS = 'previous'
# API_KEY_MINIMAL = 'DATAISMINIMAL'
# API_KEY_VALUE_MINIMAL = 'SuaD2m '
#
# # REST API
# JWT_KEY_2FA_ENABLED = 'is_2fa_enabled'
# JWT_KEY_2FA_VERIFIED = 'is_2fa_verified'
# REST_FRAMEWORK = {
#     'DEFAULT_METADATA_CLASS': None,
#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.IsAuthenticated',
#         # 'apps.shared.drf.IsAuthenticatedDisableOptionsPermission',
#     ),
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework.authentication.SessionAuthentication',
#         'rest_framework.authentication.BasicAuthentication',
#     ),
#     'DEFAULT_RENDERER_CLASSES': (
#         'rest_framework.renderers.JSONRenderer',
#     ),
#     'DEFAULT_PARSER_CLASSES': ('rest_framework.parsers.JSONParser',),
#     'PAGE_SIZE': 100,
#     'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',
#     'DATE_FORMAT': '%Y-%m-%d',
# }
# if DEBUG is True:
#     REST_FRAMEWORK['DEFAULT_METADATA_CLASS'] = 'rest_framework.metadata.SimpleMetadata'
#
# IS_SERVER_MAINTAINING = True if os.environ.get('IS_SERVER_MAINTAINING', '0') in [1, '1'] else False
#
# LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]
#
# LANGUAGE_CODE = 'en'
#
# LANGUAGE_CHOICE = (
#     ('en', 'English'),
#     ('vi', 'Vietnamese'),
# )
#
# LANGUAGE_CHOICE_CODE = [item[0] for item in LANGUAGE_CHOICE]
